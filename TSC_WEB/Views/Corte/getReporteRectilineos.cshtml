@model List<TSC_WEB.Models.Entidades.Corte.LiquidacionRectilineos.ReporteEntidad>
@using TSC_WEB.Models.Entidades.Corte.LiquidacionRectilineos;

@{
    ViewBag.Title = "Reporte de Rectilineos";
    ViewBag.Modulo = "Corte";
    Layout = "~/Views/Plantillas/_Layout.cshtml";

    int cantregistros = Model.Count;

    // TALLAS
    var tallas = cantregistros > 0 ? Model.GroupBy(std => std.talla)
        .Select(cl => new ReporteEntidad
        {
            talla = cl.First().talla,
            ordentalla = cl.First().ordentalla
        }).OrderBy(or => or.ordentalla).ToList() : new List<ReporteEntidad>();

    var canttallas = tallas.Count;

    //  LISTAS
    var lista = cantregistros > 0 ? Model.GroupBy(
            grp => new
            {
                grp.usuariocrea,
                grp.fechamod,
                grp.ficha,
                grp.partida,
                grp.pedido,
                grp.combo,
                grp.estilotsc,
                grp.estilocliente
            }
        ).Select(sel => new ReporteEntidad
        {
            usuariocrea = sel.First().usuariocrea,
            fechamod = sel.First().fechamod,
            ficha = sel.First().ficha,
            partida = sel.First().partida,
            pedido = sel.First().pedido,
            combo = sel.First().combo,
            estilotsc = sel.First().estilotsc,
            estilocliente = sel.First().estilocliente
        }).OrderBy(obj => obj.ficha).ToList() : new List<ReporteEntidad>();

    lista = lista.Distinct().ToList();

    string ultimatalla = canttallas > 0 ? tallas[canttallas - 1].talla : string.Empty;
}

@section style{
    <style>
        table {
            table-layout: fixed;
        }

        #filafija .thcabeceras {
            width: 263px !important;
            overflow: auto !important;
            vertical-align:middle !important;
        }

        #filafija .thcabecerasdatos {
            width: 100px !important;
            overflow: auto !important;
        }

        #tbodydatos td {
            vertical-align: middle;
        }
    </style>
}


<div class="card card-primary card-outline">

    <div class="card-header">
    </div>

    <div class="card-body">

        <div class="table-responsive">

            <table class="table table-bordered table-sm table-hover text-center">
                <thead class="thead-light ">
                    <tr id="filafija">
                        <th rowspan="2" style="vertical-align:middle" class="thcabecerasdatos border-table">Usuario</th>
                        <th rowspan="2" style="vertical-align:middle" class="thcabecerasdatos border-table">Fecha de Liquidación</th>
                        <th rowspan="2" style="vertical-align:middle" class="thcabecerasdatos border-table">Ficha</th>
                        <th rowspan="2" style="vertical-align:middle" class="thcabecerasdatos border-table">Partida R.</th>
                        <th rowspan="2" style="vertical-align:middle" class="thcabecerasdatos border-table">Pedido</th>
                        <th rowspan="2" style="vertical-align:middle" class="thcabecerasdatos border-table">Combo</th>
                        <th rowspan="2" style="vertical-align:middle" class="thcabecerasdatos border-table">Estilo TSC</th>
                        <th rowspan="2" style="vertical-align:middle" class="thcabecerasdatos border-table">Estilo Cliente</th>
                        <th colspan="@canttallas" class="thcabeceras border-table">Programado/Girado (Unidades)</th>
                        <th colspan="@canttallas" class="thcabeceras border-table">Liquidado (Unidades)</th>
                        <th colspan="@canttallas" class="thcabeceras border-table">Pendiente Liquidación por talla (Unidades)</th>
                        <th colspan="@canttallas" class="thcabeceras border-table">% Liquidación por talla</th>
                        <th colspan="@canttallas" class="thcabeceras border-table">Programado (kg)</th>
                        <th colspan="@canttallas" class="thcabeceras border-table">Liquidado (kg)</th>
                        <th colspan="@canttallas" class="thcabeceras border-table">Pendiente Liquidación por talla (kg)</th>
                        <th colspan="@canttallas" class="thcabeceras border-table">% Liquidación por talla (kg)</th>


                    </tr>
                    <tr>
                        @foreach (var talla in tallas)
                        {
                            <th class="border-table">@talla.talla</th>
                        }
                        @foreach (var talla in tallas)
                        {
                            <th class="border-table">@talla.talla</th>
                        }
                        @foreach (var talla in tallas)
                        {
                            <th class="border-table">@talla.talla</th>
                        }
                        @foreach (var talla in tallas)
                        {
                            <th class="border-table">@talla.talla</th>
                        }
                        @foreach (var talla in tallas)
                        {
                            <th class="border-table">@talla.talla</th>
                        }
                        @foreach (var talla in tallas)
                        {
                            <th class="border-table">@talla.talla</th>
                        }
                        @foreach (var talla in tallas)
                        {
                            <th class="border-table">@talla.talla</th>
                        }
                        @foreach (var talla in tallas)
                        {
                            <th class="border-table">@talla.talla</th>
                        }
                    </tr>
                </thead>
                <tbody id="tbodydatos">
                    @foreach (var item in lista)
                    {
                    <tr>
                        <td class="border-table-left border-table-right">@item.usuariocrea</td>
                        <td class="border-table-left border-table-right">@item.fechamod</td>
                        <td class="border-table-left border-table-right">@item.ficha</td>
                        <td class="border-table-left border-table-right">@item.partida</td>
                        <td class="border-table-left border-table-right">@item.pedido</td>
                        <td class="border-table-left border-table-right">@item.combo</td>
                        <td class="border-table-left border-table-right">@item.estilotsc</td>
                        <td class="border-table-left border-table-right">@item.estilocliente</td>

                        @* CANTIDAD DE PROGRAMADO *@
                        @foreach (var talla in tallas)
                        {

                            var filtro = Model.Where(
                                    obj => obj.ficha == item.ficha && obj.partida == item.partida
                                    && obj.pedido == item.pedido && obj.talla == talla.talla
                            ).ToList();


                            if (filtro.Count > 0)
                            {
                                var clase = filtro[0].talla == ultimatalla ? "border-table-right" : "";
                                <td class="@clase" >@filtro[0].programado</td>
                            }
                            else
                            {
                                <td class=""></td>
                            }

                        }

                        @* LIQUIDADO *@
                        @foreach (var talla in tallas)
                        {

                            var filtro = Model.Where(
                                    obj => obj.ficha == item.ficha && obj.partida == item.partida
                                    && obj.pedido == item.pedido && obj.talla == talla.talla
                            ).ToList();

                            if (filtro.Count > 0)
                            {
                                var clase = filtro[0].talla == ultimatalla ? "border-table-right" : "";
                                <td class="@clase">@filtro[0].realprimera</td>
                            }
                            else
                            {
                                <td></td>
                            }

                        }

                        @* PENDIENTES *@
                        @foreach (var talla in tallas)
                        {

                            var filtro = Model.Where(
                                    obj => obj.ficha == item.ficha && obj.partida == item.partida
                                    && obj.pedido == item.pedido && obj.talla == talla.talla
                            ).ToList();

                            if (filtro.Count > 0)
                            {
                                var clase = filtro[0].talla == ultimatalla ? "border-table-right" : "";
                                <td class="@clase">@filtro[0].pendiente</td>
                            }
                            else
                            {
                                <td></td>
                            }

                        }

                        @* % LIQUIDACION POR TALLAS *@
                        @foreach (var talla in tallas)
                        {

                            var filtro = Model.Where(
                                    obj => obj.ficha == item.ficha && obj.partida == item.partida
                                    && obj.pedido == item.pedido && obj.talla == talla.talla
                            ).ToList();

                            if (filtro.Count > 0)
                            {

                                var porcentaje = filtro[0].porcentajeliquidaciontalla * 100;
                                porcentaje = Math.Round(porcentaje, 2);
                                var clase = filtro[0].talla == ultimatalla ? "border-table-right" : "";

                                <td class="@clase">@porcentaje%</td>
                            }
                            else
                            {
                                <td></td>
                            }

                        }

                        @* PESO PROGRAMADO *@
                        @foreach (var talla in tallas)
                        {

                            var filtro = Model.Where(
                                    obj => obj.ficha == item.ficha && obj.partida == item.partida
                                    && obj.pedido == item.pedido && obj.talla == talla.talla
                            ).ToList();

                            if (filtro.Count > 0)
                            {

                                var pesoprogramado = filtro[0].pesoprogramado;
                                pesoprogramado = Math.Round(pesoprogramado, 2);

                                var clase = filtro[0].talla == ultimatalla ? "border-table-right" : "";
                                <td class="@clase">@pesoprogramado</td>
                            }
                            else
                            {
                                <td></td>
                            }

                        }

                        @* PESO LIQUIDADO *@
                        @foreach (var talla in tallas)
                        {

                            var filtro = Model.Where(
                                    obj => obj.ficha == item.ficha && obj.partida == item.partida
                                    && obj.pedido == item.pedido && obj.talla == talla.talla
                            ).ToList();

                            if (filtro.Count > 0)
                            {

                                var pesonetoreal = filtro[0].pesonetoreal;
                                pesonetoreal = Math.Round(pesonetoreal, 2);

                                var clase = filtro[0].talla == ultimatalla ? "border-table-right" : "";
                                <td class="@clase">@pesonetoreal</td>
                            }
                            else
                            {
                                <td></td>
                            }

                        }

                        @* PENDIENTE LIQUIDACION POR TALLA (KG) *@
                        @foreach (var talla in tallas)
                        {

                            var filtro = Model.Where(
                                    obj => obj.ficha == item.ficha && obj.partida == item.partida
                                    && obj.pedido == item.pedido && obj.talla == talla.talla
                            ).ToList();

                            if (filtro.Count > 0)
                            {

                                var pendienteliquidacionkg = filtro[0].pendienteliquidacionkg;
                                pendienteliquidacionkg = Math.Round(pendienteliquidacionkg, 2);

                                var clase = filtro[0].talla == ultimatalla ? "border-table-right" : "";
                                <td class="@clase">@pendienteliquidacionkg</td>
                            }
                            else
                            {
                                <td></td>
                            }

                        }

                        @* % LIQUIDACION POR TALLAS (KG) *@
                        @foreach (var talla in tallas)
                        {

                            var filtro = Model.Where(
                                    obj => obj.ficha == item.ficha && obj.partida == item.partida
                                    && obj.pedido == item.pedido && obj.talla == talla.talla
                            ).ToList();

                            if (filtro.Count > 0)
                            {

                                var porcentaje = filtro[0].porcentajeliquidaciontallakg * 100;
                                porcentaje = Math.Round(porcentaje, 2);

                                var clase = filtro[0].talla == ultimatalla ? "border-table-right" : "";
                                <td class="@clase">@porcentaje%</td>
                            }
                            else
                            {
                                <td></td>
                            }

                        }

                    </tr>
                    }

                </tbody>
            </table>

        </div>
    </div>

</div>
